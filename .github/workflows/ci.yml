# .github/workflows/ci.yml

name: 'CI - Lint, Scan & Build'

# Controls when the workflow will run
on:
  # Triggers the workflow on push events for the "main" branch
  push:
    branches: [ "main" ]
  # Triggers the workflow on pull request events targeting the "main" branch
  pull_request:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "lint-and-build"
  lint-and-build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Step 1: Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Sets up a specific version of Node.js for the job to use
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Using a modern, stable version of Node.js
          cache: 'npm' # Enables caching of npm dependencies

      # Step 3: Installs project dependencies using 'npm ci' for a clean, reliable install
      - name: Install dependencies
        run: npm ci

      # Step 4: Runs the ESLint command to check code quality
      - name: Run linter
        run: npm run lint

      # Step 5: Run TypeScript type checking
      - name: Type check
        run: npx tsc --noEmit

      # Step 6: Run unit tests with coverage
      - name: Run tests
        run: npm run test:run

      # Step 7: Runs the build command to make sure the project can be compiled for production
      - name: Build project
        run: npm run build

      # Step 8: Upload coverage reports
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  # E2E testing job
  e2e-tests:
    runs-on: ubuntu-latest
    needs: lint-and-build
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      
      - name: Run Playwright tests
        run: npm run test:e2e
        env:
          CI: true
          
      - name: Upload Playwright report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  security-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetches all history for a deeper scan
      - name: Perform Gitleaks scan
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 